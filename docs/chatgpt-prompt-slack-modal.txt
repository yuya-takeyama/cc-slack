I'm implementing a Slack app feature where users can select a repository through a modal dialog. I need detailed guidance on:

1. **Slash Command to Modal Flow**:
   - How to handle a slash command (e.g., `/cc`) in Go
   - How to open a modal in response to a slash command
   - Required payload structure and response timing (3-second limit)

2. **Block Kit Modal Implementation**:
   - Creating a modal with:
     - A select menu for repository selection
     - A multiline text input for initial prompt
     - Submit/Cancel buttons
   - How to dynamically populate select menu options from a config struct like:
     ```go
     type RepositoryConfig struct {
         Name        string
         Path        string
         Description string
     }
     ```

3. **Modal Interaction Handling**:
   - How to handle the `view_submission` payload
   - Extracting selected values from the submission
   - Responding to the submission (acknowledge or show errors)
   - Creating a new Slack message in a thread after successful submission

4. **Error Handling in Modals**:
   - How to show validation errors in the modal
   - Handling edge cases (no repositories configured, invalid selection)

5. **Integration with Existing Event API**:
   - Current setup uses Event API webhooks for app_mention events
   - How to add slash command support alongside existing event handling
   - Best practices for routing different event types

Please provide Go code examples using the slack-go/slack library, focusing on practical implementation details and common pitfalls to avoid.